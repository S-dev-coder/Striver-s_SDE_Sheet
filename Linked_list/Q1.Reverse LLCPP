// Input Format: 
// head = [3,6,8,10]
// // This means the given linked list is 3->6->8->10 with head pointer at node 3.

// BRUTE FORCE / ITERATIVE
// class Solution {
// public:

//     ListNode* reverseList(ListNode* head) {

//        //step 1
//         ListNode* prev_p = NULL;
//         ListNode* current_p = head;
//         ListNode* next_p;
       
//        //step 2
//         while(current_p) {

//             next_p = current_p->next;
//             current_p->next = prev_p;
            
//             prev_p = current_p;
//             current_p = next_p;
//         }

//         head = prev_p; //step 3
//         return head;
//     }
// };


// RECURSIVE APPROACH

// class Solution {
// public:

//     ListNode* reverseList(ListNode* &head) {

//         if (head == NULL||head->next==NULL)
//             return head;

//         ListNode* nnode = reverseList(head->next);
//         head->next->next = head;
//         head->next = NULL;
//         return nnode;
//     }
// };

